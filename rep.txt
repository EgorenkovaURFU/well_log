1. Random Forest clf without GridSearchCV

precision    recall  f1-score   support

      Anhydrite       0.95      0.96      0.96       158
          Chalk       0.98      1.00      0.99       753
           Coal       0.86      0.76      0.81        41
       Dolomite       0.96      0.65      0.77        68
         Halite       1.00      1.00      1.00      1659
      Limestone       0.94      0.88      0.91      2121
           Marl       0.95      0.94      0.94      1337
      Sandstone       0.94      0.95      0.95      3704
Sandstone/Shale       0.93      0.91      0.92      2618
          Shale       0.98      0.99      0.98     17282
           Tuff       0.98      0.98      0.98       615

       accuracy                           0.97     30356
      macro avg       0.95      0.91      0.93     30356
   weighted avg       0.97      0.97      0.97     30356

2. Fully connected NN

scaler = StandardScaler()

        self.Network = nn.Sequential(
            nn.Flatten(),
            nn.Linear(in_size, hidden_size[0]),
            nn.ReLU(),
            nn.Dropout(0.2), # nn.Dropout1d
            nn.Linear(hidden_size[0], hidden_size[1]),
            nn.ReLU(),
            nn.Dropout(0.2),
            nn.Linear(hidden_size[1], hidden_size[2]),
            nn.ReLU(),
            nn.Dropout(0.2),
            nn.Linear(hidden_size[2], hidden_size[3]),
            nn.ReLU(),
            nn.Dropout(0.2),
            nn.Linear(hidden_size[3], out_size),

model = FullyConnectedNet(in_size=len(feature_names), hidden_size=[288, 144, 72, 36], out_size=len(target_name))
optimizer = optim.Adam(params=model.parameters(), lr=0.01)
epochs = 15

precision    recall  f1-score   support

           0       0.87      0.85      0.86      2907
           1       0.74      0.59      0.66      2073
           2       0.90      0.97      0.94     13957
           3       0.84      0.57      0.68      1034
           4       0.21      0.39      0.27        44
           5       0.83      0.71      0.76      1759
           6       0.83      0.99      0.90       606
           7       0.99      1.00      0.99      1279
           8       0.68      0.12      0.20       112
           9       0.79      0.83      0.81       469
          10       0.00      0.00      0.00        44

    accuracy                           0.88     24284
   macro avg       0.70      0.64      0.64     24284
weighted avg       0.87      0.88      0.87     24284

3. Fully connected NN #2

Не было scaler
        self.Network = nn.Sequential(
            nn.Flatten(),
            nn.Linear(in_size, hidden_size[0]),
            nn.ReLU(),
            nn.Linear(hidden_size[0], hidden_size[1]),
            nn.ReLU(),
            nn.Linear(hidden_size[1], hidden_size[2]),
            nn.ReLU(),
            nn.Linear(hidden_size[2], hidden_size[3]),
            nn.ReLU(),
            nn.Linear(hidden_size[3], out_size),
        )
model = FullyConnectedNet(in_size=len(feature_names), hidden_size=[288, 144, 72, 36], out_size=len(target_name))
optimizer = optim.Adam(params=model.parameters(), lr=0.01)
epochs = 15

precision    recall  f1-score   support

           0       0.00      0.00      0.00      2970
           1       0.00      0.00      0.00      2042
           2       0.57      1.00      0.73     13901
           3       0.00      0.00      0.00      1045
           4       0.00      0.00      0.00        53
           5       0.00      0.00      0.00      1746
           6       0.00      0.00      0.00       582
           7       0.00      0.00      0.00      1322
           8       0.00      0.00      0.00       118
           9       0.00      0.00      0.00       473
          10       0.00      0.00      0.00        32

    accuracy                           0.57     24284
   macro avg       0.05      0.09      0.07     24284
weighted avg       0.33      0.57      0.42     24284

3. Fully connected NN #3

Добавила scaler

precision    recall  f1-score   support

           0       0.90      0.84      0.87      2949
           1       0.72      0.75      0.74      2077
           2       0.95      0.95      0.95     13863
           3       0.80      0.76      0.78      1041
           4       0.00      0.00      0.00        53
           5       0.80      0.81      0.81      1759
           6       0.93      0.98      0.95       572
           7       0.99      1.00      0.99      1322
           8       0.71      0.83      0.76       116
           9       0.75      0.90      0.82       495
          10       1.00      0.68      0.81        37

    accuracy                           0.90     24284
   macro avg       0.78      0.77      0.77     24284
weighted avg       0.90      0.90      0.90     24284

4. Fully connected NN #4

Добавила Batch Normalization

precision    recall  f1-score   support

           0       0.88      0.89      0.88      2953
           1       0.75      0.79      0.77      2077
           2       0.96      0.95      0.96     13851
           3       0.89      0.79      0.84      1080
           4       0.49      0.43      0.45        47
           5       0.85      0.83      0.84      1713
           6       0.94      0.98      0.96       574
           7       0.99      1.00      0.99      1353
           8       0.88      0.80      0.84       124
           9       0.85      0.94      0.89       475
          10       0.93      0.70      0.80        37

    accuracy                           0.92     24284
   macro avg       0.85      0.83      0.84     24284
weighted avg       0.92      0.92      0.92     24284

4. Fully connected NN #5

Увеличила количество эпох с 15 до 25

precision    recall  f1-score   support

           0       0.86      0.91      0.88      2919
           1       0.83      0.72      0.77      2110
           2       0.96      0.97      0.96     13898
           3       0.86      0.88      0.87      1054
           4       0.58      0.45      0.50        58
           5       0.87      0.85      0.86      1676
           6       0.96      0.99      0.97       623
           7       0.99      1.00      1.00      1316
           8       0.92      0.62      0.74       117
           9       0.88      0.95      0.91       464
          10       0.57      0.57      0.57        49

    accuracy                           0.92     24284
   macro avg       0.84      0.81      0.82     24284
weighted avg       0.92      0.92      0.92     24284

4. Fully connected NN #6

Добавила еще один слой

        self.Network = nn.Sequential(
            nn.Flatten(),
            nn.Linear(in_size, hidden_size[0]),
            nn.ReLU(),
            # nn.Dropout(0.2), # nn.Dropout1d
            nn.BatchNorm1d(hidden_size[0]),
            nn.Linear(hidden_size[0], hidden_size[1]),
            nn.ReLU(),
            # nn.Dropout(0.2),
            nn.BatchNorm1d(hidden_size[1]),
            nn.Linear(hidden_size[1], hidden_size[2]),
            nn.ReLU(),
            # nn.Dropout(0.2),
            nn.BatchNorm1d(hidden_size[2]),
            nn.Linear(hidden_size[2], hidden_size[3]),
            nn.ReLU(),
            # nn.Dropout(0.2),
            nn.BatchNorm1d(hidden_size[3]),
            nn.Linear(hidden_size[3], hidden_size[4]),
            nn.ReLU(),
            # nn.Dropout(0.2),
            nn.BatchNorm1d(hidden_size[4]),
            nn.Linear(hidden_size[4], out_size),
        )

model = FullyConnectedNet(in_size=len(feature_names), hidden_size=[576, 288, 144, 72, 36], out_size=len(target_name))

precision    recall  f1-score   support

           0       0.91      0.88      0.89      3035
           1       0.79      0.81      0.80      2068
           2       0.96      0.97      0.96     13810
           3       0.85      0.88      0.86      1027
           4       0.74      0.34      0.47        50
           5       0.92      0.76      0.83      1796
           6       0.91      0.95      0.93       562
           7       0.99      1.00      0.99      1327
           8       0.80      0.82      0.81       105
           9       0.91      0.95      0.93       471
          10       0.64      0.85      0.73        33

    accuracy                           0.93     24284
   macro avg       0.85      0.84      0.84     24284
weighted avg       0.93      0.93      0.93     24284

4. Fully connected NN #7

Добавила еще один слой и изменила кол-во эпох на 50.

        self.Network = nn.Sequential(
            nn.Flatten(),

            nn.Linear(in_size, hidden_size[0]),
            nn.ReLU(),
            nn.BatchNorm1d(hidden_size[0]),

            nn.Linear(hidden_size[0], hidden_size[1]),
            nn.ReLU(),
            nn.BatchNorm1d(hidden_size[1]),

            nn.Linear(hidden_size[1], hidden_size[2]),
            nn.ReLU(),
            nn.BatchNorm1d(hidden_size[2]),

            nn.Linear(hidden_size[2], hidden_size[3]),
            nn.ReLU(),
            nn.BatchNorm1d(hidden_size[3]),

            nn.Linear(hidden_size[3], hidden_size[4]),
            nn.ReLU(),
            nn.BatchNorm1d(hidden_size[4]),

            nn.Linear(hidden_size[4], hidden_size[5]),
            nn.ReLU(),
            nn.BatchNorm1d(hidden_size[5]),

            nn.Linear(hidden_size[5], out_size))

hidden_size=[576, 435, 288, 144, 72, 36]

epochs = 50

precision    recall  f1-score   support

           0       0.88      0.92      0.90      3011
           1       0.80      0.80      0.80      2077
           2       0.96      0.97      0.96     13816
           3       0.93      0.83      0.88      1073
           4       0.61      0.60      0.61        50
           5       0.89      0.82      0.85      1732
           6       0.97      0.96      0.97       560
           7       0.99      1.00      1.00      1335
           8       0.90      0.74      0.81       125
           9       0.85      0.96      0.90       466
          10       0.60      0.74      0.67        39

    accuracy                           0.93     24284
   macro avg       0.85      0.85      0.85     24284
weighted avg       0.93      0.93      0.93     24284

4. Fully connected NN #8

Добавила еще один слой
hidden_size=[863, 576, 435, 288, 144, 72, 36]